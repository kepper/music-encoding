<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  © 2016 by the Music Encoding Initiative (MEI).
  Licensed under the Educational Community License, Version 2.0 (the "License"); you may
  not use this file except in compliance with the License. You may obtain a copy of the License
  at http://opensource.org/licenses/ECL-2.0.
  
  Unless required by applicable law or agreed to in writing, software distributed under the
  License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
  OF ANY KIND, either express or implied. See the License for the specific language
  governing permissions and limitations under the License.
  
  This is a derivative work based on earlier versions of the schema © 2001-2006 Perry Roland
  and the Rector and Visitors of the University of Virginia; licensed under the Educational
  Community License version 1.0.
  
  CONTACT: info@music-encoding.org
-->

<div xmlns="http://www.tei-c.org/ns/1.0" type="div1" xml:id="DataDictConv" n="0">
  <head>Data Dictionary Conventions</head>
  <div type="div2" xml:id="DataDictConvElements">
    <head>Elements</head>
    <p>The "Elements" section of the data dictionary contains descriptions of each of the MEI
      elements, arranged alphabetically by their tag names. Each element entry is arranged as shown
      in Figures 1 and 2.</p>
    <p>
      <figure>
        <graphic url="Images/dataDictionary/DataDictElement_1.png"/>
      </figure>
    </p>
    <list type="gloss">
      <label>Element name:</label>
      <item>Short, mnemonic form of the element name that is used in the machine-readable XML
        document. The tag name is the first word at the top of the entry. Tag names are always in
        so-called "camel" case beginning with a lower case letter.</item>
      <label>Element definition:</label>
      <item>The element definition sometimes begins with an expanded version of the tag name that
        more fully describes the element's meaning. The full name of the element is usually a word
        or phrase that identifies the element's purpose. The definition of the element is typically
        drawn from standard reference works, glossaries, basic dictionaries, and data dictionaries,
        such as Gardner Read's <title>Music Notation: A Manual of Modern Practice</title>, Elaine
        Gould’s <title>Behind Bars</title>, <title>Grove Music Online</title>, Carl Parrish's
          <title>Notation of Medieval Music</title>, the <title>Text Encoding Initiative
          Guidelines</title>, the <title>Encoded Archival Description Tag Library</title>,
        etc.</item>
      <label>Module:</label>
      <item>Identifies the schema module in which the element is defined. In order to use the
        element, this module must be activated.</item>
      <label>Attributes:</label>
      <item>Identifies all attributes associated with the element. Each entry in the list of
        attributes contains the attribute name, an indication of whether it is required or optional,
        a brief description of its purpose and use, and the name of the attribute class in which it
        can be found. In order to use the attribute, this class must be activated.</item>
    </list>
    <p>
      <figure>
        <graphic url="Images/dataDictionary/DataDictElement_2.png"/>
      </figure>
    </p>
    <list type="gloss">
      <label>Member of:</label>
      <item>Lists the model classes in which the element participates. A model class provides a
        mechanism for grouping elements that have a similar function and that may appear at the same
        point in an encoding. In order to use the element, at least one class must be
        activated.</item>
      <label>Contained by:</label>
      <item>Identifies other elements in which this element may appear as content. This information
        conveys the sense of where and how often an element is available throughout the schema.
        Definitions of parent elements may provide additional information about an element's
        usage.</item>
      <label>May contain:</label>
      <item>Elements may be empty (e.g., permit no content); or they may contain only text, only
        other elements, or a mixture of text and elements. The word "text" indicates that character
        content is allowed directly inside the element, but the text cannot include special
        characters, such as left angle brackets, that might be interpreted by an XML parser as
        action codes. The list of permitted elements, organized according to the name of the module
        to which they belong, usually includes more elements than are generally needed because
        similar elements share the same content model. This practice eases the task of authoring a
        schema and aids machine processing of encoded documents, but it may provide a somewhat
        misleading indication of the appropriateness of the usage of some content elements.</item>
      <label>Declaration:</label>
      <item>Contains the formal declaration for the element, including its participation in
        attribute and model classes and its content model.</item>
      <label>Remarks:</label>
      <item>Remarks regarding the history and use of the element appear in this section. The text
        here describes how the element is used, differentiates it from similar elements, points out
        useful attributes, provides an illustrative example, or directs the reader to related
        elements. For more complete best practices guidance, the user is encouraged to consult the
        appropriate Guidelines chapters.</item>
      <label>Constraints:</label>
      <item>Provides a description of additional rules that apply to the element, its attributes,
        and its content that cannot be expressed by a schema. These rules provide a method for
        ensuring proper use of the element, as well as its attributes and content, when it appears
        in different contexts. It may be, for example, correct to use certain attributes or
        attribute values in one situation, but improper in another.</item>
    </list>
  </div>
  <div type="div2" xml:id="DataDictConvModels">
    <head>Model Classes</head>
    <p>Each model class entry names and describes a group of elements that shares a similar function
      and that may therefore occur at similar points within the document. Like an element, a model
      class also belongs to a module, which must be activated for the model class to be allowed. The
      data dictionary identifies members of the class and provides information regarding their
      status; that is, whether they are inherited from another class. In addition, the locations
      ("Available in") in which elements from the class may occur are named.</p>
    <p><figure>
        <graphic url="Images/dataDictionary/DataDictModelClass.png"/>
      </figure></p>
  </div>
  <div type="div2" xml:id="DataDictConvAttributes">
    <head>Attribute Classes</head>
    <p>Grouping attributes simplifies the construction of a schema because it eliminates multiple
      declarations for attributes that occur frequently. After the name and description of the
      class, an attribute class entry identifies the module to which the class belongs, attributes
      in the class, the elements to which attributes from the class can be applied, and any
      constraints on the attributes’ values</p>
    <p><figure>
        <graphic url="Images/dataDictionary/DataDictAttClass.png"/>
      </figure></p>
  </div>
  <div type="div2" xml:id="DataDictConvDatatypes">
    <head>Datatypes and Macros</head>
    <p>Datatypes and macros provide reusable declarations. They are used to create MEI-specific
      datatypes for attribute values and content declarations for elements, respectively.</p>
    <p>Some datatypes are defined in terms of so-called "built-in" datatypes defined by the World
      Wide Web Consortium (W3C), such as "anyURI", "decimal", positiveInteger", "time", etc. For
      more information on these and other datatypes defined by the W3C, visit <ref
        target="http://books.xmlschemata.org/relaxng/relax-CHP-19.html"
        >http://books.xmlschemata.org/relaxng/relax-CHP-19.html</ref>.</p>
    <p>Figure 4 demonstrates an MEI-specific datatype that defines a range of possible values. The
      entry also provides the name of the module in which the datatype is declared, information on
      where the datatype is applicable; that is, within the attribute called "intm", and a link to
      more information about the class in which the attribute participates.</p>
    <p><figure>
        <graphic url="Images/dataDictionary/DataDictMacro.png"/>
      </figure>
    </p>
    <p>Some datatypes define an enumerated list of values rather than a range. In some cases only
      the values in the list are permitted, while in others the value list may be extended by simply
      using a value not already on the list. Lists with a fixed set of values are called "closed",
      while extensible ones are referred to as "open" lists.</p>
  </div>
</div>
